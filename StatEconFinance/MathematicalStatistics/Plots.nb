(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     12277,        273]
NotebookOptionsPosition[     11727,        248]
NotebookOutlinePosition[     12083,        264]
CellTagsIndexPosition[     12040,        261]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Sample Power Curve", "Section",
 CellChangeTimes->{{3.576547627405793*^9, 3.576547634172124*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<~/Dropbox/Notes/StatisticsEconometrics/MathematicalStatistics\>\"", 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.576544266598286*^9, 3.576544267177209*^9}, {
  3.576544668639083*^9, 3.576544681031199*^9}, {3.576544747266041*^9, 
  3.576544771773669*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"3.5", ",", "1"}], "]"}], ",", "t"}], "]"}], "+", "0.05"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "7"}], "}"}]}], "]"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Sample Power Curve, \!\(\*SubscriptBox[\(\[Theta]\), \(0\)]\)=1, \
\!\(\*SuperscriptBox[\(\[Theta]\), \(*\)]\)>\!\(\*SubscriptBox[\(\[Theta]\), \
\(0\)]\)\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SuperscriptBox[\(\[Theta]\), \(*\)]\), True Value\>\"", ",", 
      "\"\<P(Reject|\!\(\*SuperscriptBox[\(\[Theta]\), \(*\)]\))\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.576544271443138*^9, 3.576544431695574*^9}, {
  3.576544498062146*^9, 3.576544628254388*^9}, {3.576544662224896*^9, 
  3.576544664573157*^9}, {3.576544780193478*^9, 3.576544875754706*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
3/cD9/8AsSTuHw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[\\(\[Theta]\\), \\(*\\)]\\), True Value\"", 
     TraditionalForm], 
    FormBox[
    "\"P(Reject|\\!\\(\\*SuperscriptBox[\\(\[Theta]\\), \\(*\\)]\\))\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  GridLines->{{1}, {}},
  ImageSize->{455., Automatic},
  Method->{},
  PlotLabel->FormBox[
   "\"Sample Power Curve, \\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
\\(0\\)]\\)=1, \\!\\(\\*SuperscriptBox[\\(\[Theta]\\), \
\\(*\\)]\\)>\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(0\\)]\\)\"", 
    TraditionalForm],
  PlotRange->{{0, 7}, {0., 1.0497673707962956`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.576544538990074*^9, 3.576544567305899*^9}, 
   3.576544629194394*^9, {3.576544823790344*^9, 3.576544827862659*^9}, 
   3.576544877002221*^9, 3.576544986243038*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<SamplePowerCurve.pdf\>\"", ",", "%", ",", "\"\<PDF\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.576544491079446*^9, 3.576544519126931*^9}, {
  3.576544644886764*^9, 3.576544647571336*^9}, {3.576544903874106*^9, 
  3.576544974546961*^9}}],

Cell[BoxData["\<\"SamplePowerCurve.pdf\"\>"], "Output",
 CellChangeTimes->{{3.576544976577698*^9, 3.576544992753363*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{638, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Linux x86 (32-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 103, 1, 81, "Section"],
Cell[685, 25, 326, 8, 55, "Input"],
Cell[CellGroupData[{
Cell[1036, 37, 1181, 31, 103, "Input"],
Cell[2220, 70, 9022, 160, 272, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11279, 235, 296, 6, 32, "Input"],
Cell[11578, 243, 121, 1, 32, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
