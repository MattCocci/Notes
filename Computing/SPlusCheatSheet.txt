___________WORKSPACE & oBJECTS________________________________________

ls() 			# Lists all objects.
ls.str() 		# Lists details of all objects
str(myobject) 		# Lists details of <myobject>.
list.files() 		# Lists all files in the current directory.
dir() 			# Lists all files in the current directory.
myobject 		# Prints simply the object.
rm(myobject) 		# removes the object <myobject>.
rm(list=ls()) 		# removes all the objects in the working space.
save.image()		# saves workspace image to whatever you specify
getwd()
setwd()




save(myobject, file="myobject.rda")
	# saves the object <myobject> in a file <myobject.rda>.

#Objects: things like vectors, matrices, datasets, plots, regression
	# results; typically hold collections of things
#workspace: full of objects



		    linear   rectangular
		   ----------------------
all the same type | vector |  matrix     |
		  |--------|-------------|
   mixed type     | list   | data frame  |
		   ----------------------
 



________DIRECTORY__________________________________________________
dir()			# Lists all files in the current directory
file.remove()		# Removes a file from current directory




_______DATA IMPORT EXPORT___________________________________________


load("mywork.rda")	# loads "mywork.rda" into workspace
read.table()		# reads data so you can assign it to a var
				# check out all the nifty args 
				# like header, na.strings, sep
some.df$new.var<-x	# Assigns x to a new column/variable in the
				#data frame "some.df"
				#NOTE: let x = NULL to remove
data.frame()		# creates a data frame out of objects passed in
read.table()		# also creates a data frame
scan()			# can read data into a matrix
slotNames(file.dat)	# gives you the names; more with finmetrics objs
				# if you need to use @, use this
names()			# gives you name of object; for S-Plus objs
				# if you need to use $, use this
exportData()

__________DATA MANIPULATION & FUNCTIONS__________________________________

subset(some.df, cond)	# Selects a subset of a data frame based on
				#some conditions you pass in
replace()		# replaces some stuff based on conditions
data.class()		# gives the class of an object
args(function)		# tells you what args function uses


c()			# puts objects together into a vector
names()			# adds names to cols
rbind()			# puts stuff together, binding rows
cbind()			# puts stuff together, binding columns
matrix()		# reshapes vectors into matrices
t(some.matrix)		# transposes a matrix			


is.na()			# tests for missing values

rep(x,y)		# replicates x a total of y times in a vector
seq(x,y,by=,length=)	# from x to y either by z or of length z 
rev()			# reverses vector or list


___________WRITING FUNCTIONS AND SUCH__________________________	

function.name <- function(args){code}
for( i in 1:10) {expression}
while(condition) {expression}

